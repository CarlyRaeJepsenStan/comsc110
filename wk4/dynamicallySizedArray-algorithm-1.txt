Aaron Shey 2027142
COMSC-110-1024

1. Objective: input number of scores to be input, then input that many scores, calculate the maximum score, average score, minimum score, and how many A grade scores.

2. Requirements:
--INPUT
size
scores

--PROCESSING
1. data definitions
2. user introduction
3. input how many values (size) to input and then the score values (each score between 0-100)
4. sort the scores from low to high
5. calculate the maximum, minimum, and average score, and the number scores that are an A grade
6. output results: the sorted scores, minimum score, high score, average score, and the number of A grade scores

--OUTPUT
objective
author
user instructions
prompt1 "How many scores? "
prompt2 "Enter a score: "
label1 "Sorted: "
label2 "Minimum: "
label3 "Maximum: "
label4 "Average: "
label5 "Number of A grades: "


--DATA
size-->>the number of values to be input (integer)
array-Scores-->>dynamically defined for SIZE number of values (integer)
max-->>maximum value of inputed values (integer)
min-->>minimum value of inputed values (integer)
sum-->>total of inputed values (integer)
average-->>average value of inputed values (decimal)
nGradeA-->>number of scores that are A grade
temp-->>used for temporarily storing one of the values in the array in the swapping process to sort (integer)
i-->>outer loop index for sorting (integer)
j-->>inner loop index for sorting (integer)


3. Algorithm Instructions
***user information
10 output objective
20 output author
30 output user instructions
***initialize values
40 i = 0
50 num = user input
55 count = 0
60 sum = 0
70 average = 0
80 nAs = 0
***input loop
90 output prompt1
100 input Numbers[count]
105 if Numbers[count] < 0 OR Numbers[count] > 100 then skip to instruction 90
110 sum = sum + Numbers[count]
120 count = count + 1
130 if count <= num then skip to instruction 90
***calculate average
140 if count > 0 then average = sum / count
***calculate minimum and maximum
***calculate the number of scores that are an A grade
150 if 85 < Numbers[i] then nAs = nAs + 1
160 i = i + 1
170 if i < count then skip to instruction 150
***sort loops
171 int j = 0
172 int k = 0
173 for incrementing j until num
174 for incrementing k until num
175 if k > j swap j and k 
continue
***output results
180 output "The average of " and count and " numbers is " and average and ".  "
190 output nGreater and " numbers are greater than the average."
999 END



4. Test Cases
Test Case #1: SIZE=4. Input values: 96 94 64 92.  Expected results: minimum=64. maximum=96. average=86.5 number of A grades=3.
3. Algorithm Instructions
***user information
10 output objective
20 output author
30 output user instructions
***initialize values
40 i = 0
50 num = user input = 4
55 count = 0
60 sum = 0
70 average = 0
80 nAs = 0
***input loop
90 output prompt1
100 input Numbers[count] = 96, 94, 64, 92
105 if Numbers[count] < 0 OR Numbers[count] > 100 then skip to instruction 90
110 sum = sum + Numbers[count]
120 count = count + 1
130 if count <= num then skip to instruction 90
***calculate average
140 if count > 0 then average = sum / count
***calculate minimum and maximum
***calculate the number of scores that are an A grade
150 if 85 < Numbers[i] then nAs = nAs + 1
160 i = i + 1
170 if i < count then skip to instruction 150
***sort loops
171 int j = 0
172 int k = 0
173 for incrementing j until num
174 for incrementing k until num
175 if k > j swap j and k 
continue
***output results
180 output "The average of " and count and " numbers is " and average and ".  "
190 output nGreater and " numbers are greater than the average."
999 END